---
- name: Create directories
  file:
    state: directory
    path: "{{ item }}"
  loop:
    - "{{ dnsmasq_paths[ansible_os_family].config | dirname }}"
    - "{{ dnsmasq_paths[ansible_os_family].zones }}"
    - "{{ dnsmasq_paths[ansible_os_family].conf_d }}"

- name: Configure Debian defaults
  when: ansible_os_family == "Debian"
  lineinfile:
    dest: /etc/default/dnsmasq
    state: "{{ (item.value is none) | ternary('absent', 'present') }}"
    regexp: ^\s*{{ item.key }}=
    line: "{{ item.key }}={{ item.value }}"
    insertafter: ^#\s*{{ item.key }}
  with_dict:
    ENABLED: 1
    IGNORE_RESOLVCONF: "yes"
    CONFIG_DIR: null
  notify: Dnsmasq configuration changed

- name: Configure Dnsmasq include directories
  lineinfile:
    create: true
    path: "{{ dnsmasq_paths[ansible_os_family].config }}"
    regexp: '{{ item.key }}="?{{ item.value }}"?'
    line: '{{ item.key }}="{{ item.value }}"'
  with_dict:
    addn-hosts: "{{ dnsmasq_paths[ansible_os_family].zones }}"
    conf-dir: "{{ dnsmasq_paths[ansible_os_family].conf_d }}"
  when: dnsmasq_zones is defined
  notify: Dnsmasq configuration changed

- name: Configure other settings
  include_tasks: |-
    {%  if option.value is sequence and option.value is not string -%}
    {{    'sequence.yml' }}
    {%- else -%}
    {{    'scalar.yml' }}
    {%- endif %}
  with_dict: "{{ dnsmasq_settings }}"
  loop_control:
    loop_var: option
  when: dnsmasq_settings is defined
  notify: Dnsmasq configuration changed

- name: Configure zones
  include_tasks: zone.yml
  with_dict: "{{ dnsmasq_zones }}"
  loop_control:
    loop_var: zone
  when: dnsmasq_zones is defined
