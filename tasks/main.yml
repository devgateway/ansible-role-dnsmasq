---
- name: Install Dnsmasq package
  package:
    name: dnsmasq
    state: present

- name: Configure Debian defaults
  when: ansible_os_family == "Debian"
  lineinfile:
    dest: /etc/default/dnsmasq
    state: "{% if item.value == '' -%} absent {%- else -%} present {%- endif %}"
    regexp: "^\\s*{{ item.key | upper }}="
    line: "{{ item.key | upper }}={{ item.value }}"
    insertafter: "^#\\s*{{ item.key | upper }}"
  with_dict:
    enabled: 1
    ignore_resolvconf: "yes"
    config_dir: ""
  notify: Restart Dnsmasq

- name: Configure Dnsmasq include directories
  lineinfile:
    path: "{{ dnsmasq_config[ansible_os_family] }}"
    regexp: '{{ item.key }}="?{{ item.value }}"?'
    line: '{{ item.key }}="{{ item.value }}"'
  with_dict:
    addn-hosts: "{{ dnsmasq_conf_d[ansible_os_family] }}/hosts"
    conf-dir: "{{ dnsmasq_conf_d[ansible_os_family] }}"
  when: dnsmasq_zones is defined
  notify: Restart Dnsmasq

- name: Configure other settings
  include_tasks: >-
    {{ (option.value is sequence and option.value is not string)
    | ternary('sequence', 'scalar') }}.yml
  with_dict: "{{ dnsmasq_settings }}"
  loop_control:
    loop_var: option
  when: dnsmasq_settings is defined
  notify: Restart Dnsmasq

- name: Create hosts directory
  file:
    state: directory
    path: "{{ zone_path[ansible_os_family] }}"
  when: dnsmasq_zones is defined

- name: Configure zones
  include_tasks: zone.yml
  with_items: "{{ dnsmasq_zones }}"
  loop_control:
    loop_var: zone
  when: dnsmasq_zones is defined
